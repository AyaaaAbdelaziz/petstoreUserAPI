<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="16" passed="15" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2021-10-18T17:36:15 EET" name="UsersAPIsuite " finished-at="2021-10-18T17:36:39 EET" duration-ms="24162">
    <groups>
    </groups>
    <test started-at="2021-10-18T17:36:15 EET" name="UserAPITest" finished-at="2021-10-18T17:36:39 EET" duration-ms="24162">
      <class name="api.UpdateUserApi_Put">
        <test-method signature="UserCanLogin()[pri:1, instance:api.UpdateUserApi_Put@2692910f]" started-at="2021-10-18T17:36:34 EET" name="UserCanLogin" finished-at="2021-10-18T17:36:35 EET" duration-ms="875" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- UserCanLogin -->
        <test-method signature="UpdateUser()[pri:2, instance:api.UpdateUserApi_Put@2692910f]" started-at="2021-10-18T17:36:35 EET" name="UpdateUser" finished-at="2021-10-18T17:36:36 EET" duration-ms="923" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- UpdateUser -->
        <test-method signature="UserCanLogout()[pri:3, instance:api.UpdateUserApi_Put@2692910f]" started-at="2021-10-18T17:36:36 EET" name="UserCanLogout" finished-at="2021-10-18T17:36:37 EET" duration-ms="1072" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- UserCanLogout -->
      </class> <!-- api.UpdateUserApi_Put -->
      <class name="api.CreateListOfUsersApiTest_Post">
        <test-method signature="createListofUsers(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:api.CreateListOfUsersApiTest_Post@411a5965]" started-at="2021-10-18T17:36:18 EET" name="createListofUsers" data-provider="UserDataProvider" finished-at="2021-10-18T17:36:23 EET" duration-ms="5070" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[tester1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[aya]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[mustafa]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[test1@test.com]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[12345]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[1234567]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createListofUsers -->
        <test-method signature="createListofUsers(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:api.CreateListOfUsersApiTest_Post@411a5965]" started-at="2021-10-18T17:36:23 EET" name="createListofUsers" data-provider="UserDataProvider" finished-at="2021-10-18T17:36:24 EET" duration-ms="936" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[tester2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[omnia]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[mustafa]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[test2@test.com]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[123456]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[121234]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createListofUsers -->
        <test-method signature="createListofUsers(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:api.CreateListOfUsersApiTest_Post@411a5965]" started-at="2021-10-18T17:36:24 EET" name="createListofUsers" data-provider="UserDataProvider" finished-at="2021-10-18T17:36:25 EET" duration-ms="864" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[tester3]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[rawda]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[ahmed]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[test3@test.com]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[1234567]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[12575766]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createListofUsers -->
        <test-method signature="createListofUsers(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:api.CreateListOfUsersApiTest_Post@411a5965]" started-at="2021-10-18T17:36:25 EET" name="createListofUsers" data-provider="UserDataProvider" finished-at="2021-10-18T17:36:26 EET" duration-ms="855" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[tester4]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[sedra]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[ahmed]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[test4@test.com]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[123]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[7172817]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createListofUsers -->
      </class> <!-- api.CreateListOfUsersApiTest_Post -->
      <class name="api.DeleteUserApiTest_Delete">
        <test-method signature="UserCanLogin()[pri:1, instance:api.DeleteUserApiTest_Delete@4fe3f9ef]" started-at="2021-10-18T17:36:31 EET" name="UserCanLogin" finished-at="2021-10-18T17:36:31 EET" duration-ms="931" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- UserCanLogin -->
        <test-method signature="DeleteUser()[pri:2, instance:api.DeleteUserApiTest_Delete@4fe3f9ef]" started-at="2021-10-18T17:36:31 EET" name="DeleteUser" finished-at="2021-10-18T17:36:32 EET" duration-ms="881" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Status check failed! expected [200] but found [404]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Status check failed! expected [200] but found [404]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertEqualsImpl(Assert.java:140)
at org.testng.Assert.assertEquals(Assert.java:122)
at org.testng.Assert.assertEquals(Assert.java:907)
at base.TestBase.checkStatusIs200(TestBase.java:47)
at api.DeleteUserApiTest_Delete.DeleteUser(DeleteUserApiTest_Delete.java:34)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- DeleteUser -->
        <test-method signature="UserCanLogout()[pri:3, instance:api.DeleteUserApiTest_Delete@4fe3f9ef]" started-at="2021-10-18T17:36:32 EET" name="UserCanLogout" finished-at="2021-10-18T17:36:33 EET" duration-ms="864" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- UserCanLogout -->
      </class> <!-- api.DeleteUserApiTest_Delete -->
      <class name="api.UserLoginApiTest_Get">
        <test-method signature="UserCanLogin()[pri:1, instance:api.UserLoginApiTest_Get@2af87d7a]" started-at="2021-10-18T17:36:37 EET" name="UserCanLogin" finished-at="2021-10-18T17:36:38 EET" duration-ms="871" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- UserCanLogin -->
        <test-method signature="UserCanLogout()[pri:2, instance:api.UserLoginApiTest_Get@2af87d7a]" started-at="2021-10-18T17:36:38 EET" name="UserCanLogout" finished-at="2021-10-18T17:36:39 EET" duration-ms="962" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- UserCanLogout -->
      </class> <!-- api.UserLoginApiTest_Get -->
      <class name="api.CreatUserByLoggedInUserApiTest_Post">
        <test-method signature="UserCanLogin()[pri:1, instance:api.CreatUserByLoggedInUserApiTest_Post@324e8baa]" started-at="2021-10-18T17:36:26 EET" name="UserCanLogin" finished-at="2021-10-18T17:36:29 EET" duration-ms="2784" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- UserCanLogin -->
        <test-method signature="CreatUser(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:2, instance:api.CreatUserByLoggedInUserApiTest_Post@324e8baa]" started-at="2021-10-18T17:36:29 EET" name="CreatUser" data-provider="SingleUserDataProvider" finished-at="2021-10-18T17:36:29 EET" duration-ms="889" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[tester5]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[mariam]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[ahmed]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[test1@gmail.com]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[123]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[123456]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CreatUser -->
        <test-method signature="UserCanLogout()[pri:3, instance:api.CreatUserByLoggedInUserApiTest_Post@324e8baa]" started-at="2021-10-18T17:36:29 EET" name="UserCanLogout" finished-at="2021-10-18T17:36:30 EET" duration-ms="1009" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- UserCanLogout -->
      </class> <!-- api.CreatUserByLoggedInUserApiTest_Post -->
      <class name="api.GetUserByUsernameApiTest_Get">
        <test-method signature="getUserbyUsername()[pri:0, instance:api.GetUserByUsernameApiTest_Get@682fc714]" started-at="2021-10-18T17:36:33 EET" name="getUserbyUsername" finished-at="2021-10-18T17:36:34 EET" duration-ms="885" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getUserbyUsername -->
      </class> <!-- api.GetUserByUsernameApiTest_Get -->
    </test> <!-- UserAPITest -->
  </suite> <!-- UsersAPIsuite  -->
</testng-results>
